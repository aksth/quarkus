/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.19).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.CountriesResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-05-03T10:17:24.699Z[GMT]")
@Api(value = "reference", description = "the reference API")
public interface ReferenceApi {

    @ApiOperation(value = "SEQ-case-investigate-world-check-profile: Get a World-Check profile", nickname = "sEQCaseInvestigateWorldCheckProfileGetaWorldCheckprofile", notes = "Get detailed World-Check profile data", tags={ "Misc", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "") })
    @RequestMapping(value = "/reference/profile/{worldcheck-profile-id}",
        method = RequestMethod.GET)
    ResponseEntity<Void> sEQCaseInvestigateWorldCheckProfileGetaWorldCheckprofile(@ApiParam(value = "" ,required=true) @RequestHeader(value="Date", required=true) String date
,@ApiParam(value = "" ,required=true) @RequestHeader(value="org.akash.Authorization", required=true) String authorization
,@ApiParam(value = "",required=true) @PathVariable("gateway-host") String gatewayHost
,@ApiParam(value = "",required=true) @PathVariable("gateway-url") String gatewayUrl
,@ApiParam(value = "",required=true) @PathVariable("worldcheck-profile-id") String worldcheckProfileId
);


    @ApiOperation(value = "SEQ-pre-country-list: Get the ISO country list", nickname = "sEQPreCountryListGettheISOcountrylist", notes = "Fetch the ISO country list to use when providing case secondary fields related to countries/locations.", response = CountriesResponse.class, tags={ "Misc", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = CountriesResponse.class) })
    @RequestMapping(value = "/reference/countries",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CountriesResponse> sEQPreCountryListGettheISOcountrylist(@ApiParam(value = "" ,required=true) @RequestHeader(value="Date", required=true) String date
,@ApiParam(value = "" ,required=true) @RequestHeader(value="org.akash.Authorization", required=true) String authorization
,@ApiParam(value = "",required=true) @PathVariable("gateway-host") String gatewayHost
,@ApiParam(value = "",required=true) @PathVariable("gateway-url") String gatewayUrl
);


    @ApiOperation(value = "SEQ-pre-source-providers: Get the list of source providers", nickname = "sEQPreSourceProvidersGetthelistofsourceproviders", notes = "Fetch the List of Providers and their sources for WCO data", tags={ "Misc", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "") })
    @RequestMapping(value = "/reference/providers",
        method = RequestMethod.GET)
    ResponseEntity<Void> sEQPreSourceProvidersGetthelistofsourceproviders(@ApiParam(value = "" ,required=true) @RequestHeader(value="Date", required=true) String date
,@ApiParam(value = "" ,required=true) @RequestHeader(value="org.akash.Authorization", required=true) String authorization
,@ApiParam(value = "",required=true) @PathVariable("gateway-host") String gatewayHost
,@ApiParam(value = "",required=true) @PathVariable("gateway-url") String gatewayUrl
);


    @ApiOperation(value = "SEQ-watchlist-maintain-individual-simple: Maintain Watchlist data: Create Individual - Simple", nickname = "sEQWatchlistMaintainIndividualSimpleMaintainWatchlistdataCreateIndividualSimple", notes = "Maintain your Watchlist data", tags={ "Misc", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "") })
    @RequestMapping(value = "/reference/watchlist",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> sEQWatchlistMaintainIndividualSimpleMaintainWatchlistdataCreateIndividualSimple(@ApiParam(value = "" ,required=true) @RequestHeader(value="Content-Length", required=true) String contentLength
,@ApiParam(value = "" ,required=true) @RequestHeader(value="org.akash.Authorization", required=true) String authorization
,@ApiParam(value = "" ,required=true) @RequestHeader(value="Date", required=true) String date
,@ApiParam(value = "",required=true) @PathVariable("gateway-host") String gatewayHost
,@ApiParam(value = "",required=true) @PathVariable("gateway-url") String gatewayUrl
);


    @ApiOperation(value = "SEQ-watchlist-update-provider-source: Create or update provider sources", nickname = "sEQWatchlistUpdateProviderSourceCreateorupdateprovidersources", notes = "Allows external clients to create or update provider sources.", tags={ "Misc", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "") })
    @RequestMapping(value = "/reference/providers/sources/{provider-source-identifier}",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> sEQWatchlistUpdateProviderSourceCreateorupdateprovidersources(@ApiParam(value = "" ,required=true) @RequestHeader(value="Content-Length", required=true) String contentLength
,@ApiParam(value = "" ,required=true) @RequestHeader(value="org.akash.Authorization", required=true) String authorization
,@ApiParam(value = "" ,required=true) @RequestHeader(value="Date", required=true) String date
,@ApiParam(value = "",required=true) @PathVariable("gateway-host") String gatewayHost
,@ApiParam(value = "",required=true) @PathVariable("gateway-url") String gatewayUrl
,@ApiParam(value = "",required=true) @PathVariable("provider-source-identifier") String providerSourceIdentifier
);

}
